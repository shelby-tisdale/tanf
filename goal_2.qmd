---
title: "Goal 2"
author: "Shelby Tisdale"
format: html
editor: visual
---

# Load Data and Packages

```{r}
#| label: load-packages
library(tidyverse)
library(data.table)
library(bit64)
library(janitor)
library(gt)
library(gtsummary)
library(rstanarm)
library(bayesplot)
library(tidybayes)
library(broom.mixed)
```

```{r}
#| label: load-full-data
all_goals <- read_csv("sipp_all_goals.csv")
```

# Description

**Goal 2:** End the dependence of needy parents on government benefits by promoting job preparation, work, and marriage.

**Participant Households:** All households who received government benefits in the earliest year of their participation in the study.

**Criteria:** Goal 2 is fulfilled for a participant household if household members are no longer receiving government benefits by the end of the reference frame. Variables related to job preparation, work, and marriage will be used as predictors.

## Aggregate Dataset

```{r}
#| label: aggregate-goal-2

# calculate number of years each person is in study
hh_years <- all_goals |>
  select(household_id, state, year) |>
  distinct() |>
  count(household_id) |>
  rename(n_years = n)

# create marriage variable
hh_marriage_yr <- all_goals |>
  filter(is_householder == 1) |>
  #mutate(employed = if_else(employed == 1, 1, 0)) |>
  select(household_id, state, month, fiscal_year, hh_married_month, in_goal2, employed) |>
  filter(in_goal2 == 1) |>
  group_by(household_id, state, fiscal_year) |>
  summarize(hh_marriage_yr = max(hh_married_month, na.rm = TRUE),
            hh_employed_yr = max(employed, na.rm = TRUE),
            .groups = "drop")

# demographic controls
hh_demogs <- all_goals |>
  filter(is_householder == 1 & in_goal2 == 1) |>
  select(household_id, state, fiscal_year, race, ethnicity, sex, total_children) |>
  distinct()

goal2 <- all_goals |>
  # select goal 2 participants
  filter(in_goal2 == 1) |>
  # relevant variables for goal 2
  select(household_id, state, fiscal_year, pct_unobligated, goal2, received_job_training, tanf_amt_received) |>
  # change job training variable to numeric
  mutate(received_job_training = if_else(received_job_training == "0", 0, 1)) |>
  # add variable for number of years household is in study
  left_join(hh_years, join_by("household_id")) |>
  # calculate total tanf received for each household for each year
  # aggregates data to hh-state-year level
  group_by(household_id, state, fiscal_year, pct_unobligated, received_job_training, goal2, n_years) |>
  summarize(total_hh_tanf = sum(tanf_amt_received, na.rm = TRUE), .groups = "drop") |>
  left_join(hh_marriage_yr, by = c("household_id", "state", "fiscal_year")) |>
  # left_join(hh_demogs, by = c("household_id", "state", "fiscal_year")) |>
  group_by(state, fiscal_year, pct_unobligated) |>
  summarize(
    pct_goal2 = mean(goal2),
    pct_job_prep = mean(received_job_training),
    pct_married = mean(hh_marriage_yr, na.rm = TRUE),
    #pct_employed = mean(hh_employed_yr, na.rm = TRUE),
    # revisit mean tanf variable
    mean_hh_tanf = mean(total_hh_tanf),
    med_n_years = median(n_years),
    .groups = "drop"
    ) |>
  mutate(
    pct_unobligated = pct_unobligated*100,
    pct_goal2 = pct_goal2*100,
    pct_job_prep = pct_job_prep*100,
    pct_married = pct_married*100
    )
```

## Table 1

## EDA

```{r}
#| label: eda-goal-2

# histogram of goal 2 achievement rate (state-year)
goal2 |>
  #mutate(goal2 = if_else(goal2 == "1", 1, 0)) |>
  #group_by(state, fiscal_year) |>
  #summarize(goal2_rate = mean(goal2)) |>
  ggplot(aes(x = pct_goal2)) +
  geom_histogram() +
  labs(x = "goal 2 success rate by state and year",
       y = "Count")

# histogram of goal 2 achievement rate (state only)
goal2 |>
  #mutate(goal2 = if_else(goal2 == "1", 1, 0)) |>
  group_by(state) |>
  summarize(goal2_rate = mean(pct_goal2)) |>
  ggplot(aes(x = goal2_rate)) +
  geom_histogram() +
  labs(x = "goal 2 success rate by state",
       y = "Count")

# line graph - percent unobligated funds 2017-2021
# grouped by state
# there is variation from year-to-year
# needs to be accounted for in model
sipp_goal2 |>
  mutate(goal2 = if_else(goal2 == "1", 1, 0)) |>
  ggplot(aes(x = fiscal_year, group = state, y = pct_unobligated)) +
  geom_line() +
  facet_wrap(~state) +
  theme_minimal() +
  labs(x = "fiscal year", y = "percent unobligated funds")

# gives sample size for each state
goal2_hh_per_state <- sipp_goal2 |>
  select(state, household_id) |>
  distinct() |>
  group_by(state) |>
  count()

sipp_goal2 |>
  mutate(goal2 = if_else(goal2 == "1", 1, 0)) |>
  group_by(state, fiscal_year, pct_unobligated, party) |>
  summarize(goal2_rate = mean(goal2)) |>
  ggplot(aes(x = pct_unobligated, y = goal2_rate, color = party)) +
  geom_point()
```

# Modeling

## Varying intercepts model - success rate

### Layer 1: Variability within state

Let $Y_{ij2}$ denote the percent achievement of Goal 2 for year $i$ in state $j$.

$$ Y_{ij2} |\beta_{0j}, \beta_1, \beta_2, \beta_3, \beta_4, \beta_5, \sigma_y^2 \ \sim N(\mu_{ij}, \sigma^2_y) \text{ where } \mu_{ij} = \beta_{0j} + \beta_1X_{ij1} + \beta_2X_{ij2} + \beta_3X_{ij3} + \beta_4{X_ij4} + \beta_5X_{ij5} $$

where

$$ X_{ij1} = \text{whether householder i in state j is married at end of reference frame} \\ X_{ij2} = \text{whether householder i in state j participated in job preparation} \\ X_{ij3} = \text{whether householder i in state j is employed at end of reference frame} \\ X_{ij4} = \text{amount of TANF funds received by household i in state j during reference period} \\ X_{j5} = \text{percent of unobligated funds for state j} $$

**group-specific parameters:**

-   $\beta_{0j} = \text{intercept of the regression model for state j}$

**global-parameters:**

-   $\beta_1,..., \beta_5$: global coefficents

-   $\sigma^2_y$ = within-state variability around the mean regression model (measure of the strength of the relationship between state-year level percent goal achievement and predictors)

### Layer 2: Variability within year

$$
\beta_{0j} | \beta_0, \sigma_0 \text{ iid }\sim N(\beta_0, \sigma^2_0)
$$

where:

-   $\beta_0$ = **global average intercept** across all states (average state's baseline success rate)

-   $\sigma_0$ = **between-group variability** in intercepts $\beta_{0j}$ (extent to which baseline success rate varies from state to state.

### Layer 3: Global Priors

Regression model within state $j$:

$$ Y_{ij2} |\beta_{0j}, \beta_1, \beta_2, \beta_3, \beta_4, \beta_5, \sigma_y^2 \ \sim N(\mu_{ij}, \sigma^2_y) \text{ where } \mu_{ij} = \beta_{0j} + \beta_1X_{ij1} + \beta_2X_{ij2} + \beta_3X_{ij3} + \beta_4{X_ij4} + \beta_5X_{ij5} $$

Variability in baseline success rate between states:

$$
\beta_{0j} | \beta_0, \sigma_0 \text{ iid }\sim N(\beta_0, \sigma^2_0)
$$

Priors on global parameters:

$$\beta_{0c} \sim N(m_0, s^2_0)$$

$$\beta_{0c} \sim N(m_0, s^2_0)$$

$$\beta_{1} \sim N(m_1, s^2_1)$$

$$\beta_{2} \sim N(m_2, s^2_2)$$

$$\beta_{3} \sim N(m_3, s^2_3)$$

$$\beta_{4} \sim N(m_2, s^2_4)$$

$$\beta_{5} \sim N(m_5, s^2_5)$$

$$
\sigma_y \sim \text{Exp}(l_y)
$$ $$
\sigma_0 \sim \text{Exp}(l_0)
$$

## Tuning the prior

-   Percent goal 2 success for each state averages about 28 with a standard deviation of 21. Prior model for $\beta_{0c}$: $\beta_{0c} \sim N(0.28, 0.21^2)$

-   we think goal 2 success will increase when more householders are married. $\beta_1 \sim N(1,1)$

-   we think goal 2 success will increase when more householders participate in job preparation. $\beta_2 \sim N(1,1)$

-   we think goal 2 success will increase when more householders are employed. $\beta_3 \sim N(1,1)$

-   we think goal 2 success will increase with higher TANF fund receipt. $\beta_4 \sim N(1,1)$

-   Logically, we think goal 2 success will decrease when unobligated funds increase. (not sure how much) $\beta_5 \sim N(-1, 1^2)$

-   we'll use weakly informative priors for standard deviation parameters

    ```{r}
    #| label: goal-2-tune-priors

    goal_2_model_1_prior <- stan_glmer(
      pct_goal2 ~ pct_unobligated +  pct_job_prep + pct_married + mean_hh_tanf + med_n_years + (1 | state),
      data = goal2, family = gaussian,
      prior_intercept = normal(28, 25),
      prior = normal(1, 25),
      prior_aux = exponential(1, autoscale = TRUE), 
      prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),
      chains = 4, iter = 10000, seed = 84735,
      prior_PD = TRUE
    )

    goal_2_model_1_prior
    ```

```{r}
set.seed(84735)

goal2 <- goal2 |> na.omit()

# simulate 100 datasets of goal outcomes from prior
goal2 |>
  add_predicted_draws(goal_2_model_1_prior, ndraws = 100) %>%
  ggplot(aes(x = pct_goal2)) +
    geom_density(aes(x = .prediction, group = .draw)) +
  xlim(c(-50, 150))

# why does this look like varying slopes??
goal2 |> 
  add_fitted_draws(goal_2_model_1_prior, n = 4) %>%
  ggplot(aes(x = pct_unobligated, y = pct_goal2)) +
    geom_line(aes(y = .value, group = paste(state, .draw))) + 
    facet_wrap(~ .draw)

ggplot(goal2, aes(x = pct_unobligated, y = pct_goal2)) +
  geom_point() +
  facet_wrap(~state)
```

```{r}

goal_2_model_1 <- update(goal_2_model_1_prior, prior_PD = FALSE)

prior_summary(goal_2_model_1_prior)

# Markov chain diagnostics
mcmc_trace(goal_2_model_1)
mcmc_dens_overlay(goal_2_model_1)
mcmc_acf(goal_2_model_1)
neff_ratio(goal_2_model_1)
rhat(goal_2_model_1)


goal2_model1_summary <- tidy(goal_2_model_1, effects = "fixed", conf.int = TRUE, conf.level = .95)
goal2_model1_summary
```

\***Note:** don't do a varying slopes model

check literature for priors - check policy goals.

# Building the 3-level model

```{r}
goal2 <- all_goals |>
  # select goal 2 participants
  filter(in_goal2 == 1) |>
  # relevant variables for goal 2
  select(household_id, state, fiscal_year, pct_unobligated, goal2, received_job_training, tanf_amt_received) |>
  # change job training variable to numeric
  mutate(received_job_training = if_else(received_job_training == "0", 0, 1)) |>
  # add variable for number of years household is in study
  left_join(hh_years, join_by("household_id")) |>
  # calculate total tanf received for each household for each year
  # aggregates data to hh-state-year level
  group_by(household_id, state, fiscal_year, pct_unobligated, received_job_training, goal2, n_years) |>
  summarize(total_hh_tanf = sum(tanf_amt_received, na.rm = TRUE), .groups = "drop") |>
  left_join(hh_marriage_yr, by = c("household_id", "state", "fiscal_year")) |>
  # add covid indicator 
  mutate(is_covid = if_else(fiscal_year >= 2020, 1, 0))

goal2 |>
  group_by(state) |>
  summarize(p_goal2 = mean(goal2)) |>
  ggplot(aes(x = p_goal2)) +
  geom_histogram()

```

```{r}

# tune prior
goal_2_model_2_prior <- stan_glmer(
  goal2 ~ pct_unobligated + received_job_training + total_hh_tanf + n_years + total_hh_tanf + hh_marriage_yr + hh_employed_yr + is_covid + (1 | fiscal_year) + (1 | state),
  data = goal2, family = binomial,
  prior_intercept = normal(-1.05, 1.5, autoscale = TRUE),
  prior = normal(0, 2.5, autoscale = TRUE),
  prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),
  chain = 1, iter = 1, seed = 12345)
```
